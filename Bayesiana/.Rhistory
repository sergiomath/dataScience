a=1
b=2/3
n=1000
s=650
ap=a+s
bp=b+n-s
mediaP=ap/(ap+bp)
varP=(ap*bp)/((ap+bp)**2*(ap+bp+1))
xp=np.arange(0,1,0.001)
yp=stats.beta.pdf(x,ap,bp)
plt.plot(xp,yp)
plt.title("Función de Masa de Probabilidad posterior Beta a=651 , b=350.66")
plt.ylabel(r'$p(\theta \mid s) $')
plt.xlabel(r'$\theta $')
plt.show()
from scipy import stats
import matplotlib.pyplot as plt
import numpy as np
#!pip install scipy
a=1
b=2/3
x=np.arange(0,1,0.001)
y=stats.beta.pdf(x,a,b)
plt.plot(x,y)
plt.title('Función de Masa de Probabilidad Beta a=1 , b=2/3')
plt.ylabel('probabilidad')
plt.xlabel('valores')
plt.show()
a=1
b=2/3
n=1000
s=650
ap=a+s
bp=b+n-s
mediaP=ap/(ap+bp)
varP=(ap*bp)/((ap+bp)**2*(ap+bp+1))
xp=np.arange(0,1,0.001)
yp=stats.beta.pdf(x,ap,bp)
plt.plot(xp,yp)
plt.title("Función de Masa de Probabilidad posterior Beta a=651 , b=350.66")
plt.ylabel(r'$p(\theta \mid s) $')
plt.xlabel(r'$\theta $')
plt.show()
##install.packages("reticulate")
knitr::opts_chunk$set(echo = FALSE)
reticulate::repl_python()
##install.packages("reticulate")
knitr::opts_chunk$set(echo = FALSE)
reticulate::repl_python()
